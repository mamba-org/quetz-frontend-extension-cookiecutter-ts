{
  "name": "{{ cookiecutter.extension_name }}",
  "version": "0.1.0",
  "description": "{{ cookiecutter.project_short_description }}",
  "keywords": [
    "quetz",
    "quetz-frontend",
    "quetz-frontend-extension"
  ],
  "homepage": "{{ cookiecutter.repository }}",
  "bugs": {
    "url": "{{ cookiecutter.repository }}/issues"
  },
  "license": "BSD-3-Clause",
  "author": {
    "name": "{{ cookiecutter.author_name }}",
    "email": "{{ cookiecutter.author_email }}"
  },
  "files": [
    "lib/**/*.{d.ts,eot,gif,html,jpg,js,js.map,json,png,svg,woff2,ttf}",
    "style/**/*.{css,js,eot,gif,html,jpg,json,png,svg,woff2,ttf}"
  ],
  "main": "lib/index.js",
  "types": "lib/index.d.ts",
  {% if cookiecutter.kind != 'theme' %}"style": "style/index.css",{% endif %}
  "repository": {
    "type": "git",
    "url": "{{ cookiecutter.repository }}.git"
  },
  "scripts": {
    "build": "yarn run build:lib && yarn run build:extension:dev",
    "build:prod": "yarn run clean && yarn run build:lib && yarn run build:extension",
    "build:extension": "quetz-frontend build .",
    "build:extension:dev": "quetz-frontend build --development .",
    "build:lib": "tsc",
    "clean": "yarn run clean:lib",
    "clean:lib": "rimraf lib tsconfig.tsbuildinfo",
    "clean:lintcache": "rimraf .eslintcache .stylelintcache",
    "clean:extension": "rimraf {{ cookiecutter.python_name }}/labextension",
    "clean:all": "yarn run clean:lib && yarn run clean:extension && yarn clean:lintcache",
    "eslint": "yarn eslint:check --fix",
    "eslint:check": "eslint . --cache --ext .ts,.tsx",
    "install:extension": "yarn run build",
    "lint": "yarn stylelint && yarn prettier && yarn eslint",
    "lint:check": "yarn stylelint:check && yarn prettier:check && yarn eslint:check",
    "prettier": "yarn prettier:base --write --list-different",
    "prettier:base": "prettier \"**/*{.ts,.tsx,.js,.jsx,.css,.json,.md}\"",
    "prettier:check": "yarn prettier:base --check",
    "stylelint": "yarn stylelint:check --fix",
    "stylelint:check": "stylelint --cache \"style/**/*.css\"",{% if cookiecutter.test.lower().startswith('y') %}
    "test": "jest --coverage",{% endif %}
    "watch": "run-p watch:src watch:extension",
    "watch:src": "tsc -w",
    "watch:extension": "quetz-frontend watch ."
  },
  "dependencies": {
    "@quetz-frontend/application": ">=0.3.0 <1.0.0"{% if cookiecutter.kind.lower() == 'theme' %},
    "@jupyterlab/apputils": "^3.2.7"{% endif %}{% if cookiecutter.has_settings.lower().startswith('y') %},
    "@jupyterlab/settingregistry": "^3.2.7"{% endif %}
  },
  "devDependencies": {
    {% if cookiecutter.test.lower().startswith('y') %}"@babel/core": "^7.0.0",
    "@babel/preset-env": "^7.0.0",
    {% endif %}
    "@quetz-frontend/builder": "^3.3.0",{% if cookiecutter.test.lower().startswith('y') %}
    "@jupyterlab/testutils": "^3.0.0",
    "@types/jest": "^26.0.0",{% endif %}
    "@typescript-eslint/eslint-plugin": "^4.8.1",
    "@typescript-eslint/parser": "^4.8.1",
    "eslint": "^7.14.0",
    "eslint-config-prettier": "^6.15.0",
    "eslint-plugin-prettier": "^3.1.4",{% if cookiecutter.test.lower().startswith('y') %}
    "jest": "^26.0.0",{% endif %}
    "npm-run-all": "^4.1.5",
    "prettier": "^2.1.1",
    "rimraf": "^3.0.2",
    "stylelint": "^14.3.0",
    "stylelint-config-prettier": "^9.0.3",
    "stylelint-config-recommended": "^6.0.0",
    "stylelint-config-standard": "~24.0.0",
    "stylelint-prettier": "^2.0.0",
    "typescript": "~4.1.3"{% if cookiecutter.test.lower().startswith('y') %},
    "ts-jest": "^26.0.0"{% endif %}
  },
  "sideEffects": [
    "style/*.css"{% if cookiecutter.kind.lower() != 'theme' %},
    "style/index.js"
  ],
  "styleModule": "style/index.js",{% else %}],{% endif %}
  "publishConfig": {
    "access": "public"
  },
  "jupyterlab": {
    "extension": true,
    "outputDir": "{{cookiecutter.python_name}}/labextension"{% if cookiecutter.has_settings.lower().startswith('y') %},
    "schemaDir": "schema"{% endif %}{% if cookiecutter.kind.lower() == 'theme' %},
    "themePath": "style/index.css"{% endif %}
  },
  "jupyter-releaser": {
    "hooks": {
      "before-build-npm": [
        "python -m pip install quetz-frontend",
        "yarn"
      ],
      "before-build-python": [
        "yarn clean:all"
      ]
    }
  }
}
