name: CI

on:
  push:
    branches: ["quetz"]
  pull_request:
    branches: ["*"]
  schedule:
    - cron: "0 0 * * *"

jobs:
  names:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "my_extension"
            pyname: "my_extension"
          - name: "myextension"
            pyname: "myextension"
          - name: "my-extension"
            pyname: "my_extension"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Install dependencies
        run: |
          python -m pip install cookiecutter check-manifest build

      - name: Create pure frontend extension
        env:
          NAME: ${{ matrix.name }}
          PYNAME: ${{ matrix.pyname }}
        run: |
          set -eux
          # Trick to use custom parameters
          python -c "from cookiecutter.main import cookiecutter; import json, os; f=open('cookiecutter.json'); d=json.load(f); f.close(); d['extension_name']=os.getenv('NAME'); cookiecutter('.', extra_context=d, no_input=True)"
          pushd ${PYNAME}
          pip install quetz-frontend
          yarn install && yarn run eslint:check
          pip install -e .
          quetz-frontend develop .
          quetz-frontend list
          quetz-frontend list 2>&1 | grep -ie "${NAME}"

          quetz-frontend clean
          quetz-frontend clean-frontend
          pip uninstall -y ${NAME} quetz-frontend

          git init && git add .
          check-manifest -v

          popd
          rm -rf ${NAME}

  settings:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # This will be used by the base setup action
        python-version: ["3.7", "3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Install dependencies
        run: |
          python -m pip install cookiecutter check-manifest build

      - name: Create pure frontend extension
        run: |
          set -eux
          # Trick to use custom parameters
          python -c "from cookiecutter.main import cookiecutter; import json; f=open('cookiecutter.json'); d=json.load(f); f.close(); d['has_settings']='y'; cookiecutter('.', extra_context=d, no_input=True)"
          pushd myextension
          pip install quetz-frontend
          jlpm install
          pip install -e .
          quetz-frontend develop .
          quetz-frontend list
          quetz-frontend list 2>&1 | grep -ie "${NAME}"

          quetz-frontend clean
          quetz-frontend clean-frontend
          pip uninstall -y myextension quetz-frontend

          git init && git add .
          check-manifest -v

          popd
          rm -rf myextension

  theme:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # This will be used by the base setup action
        python-version: ["3.7", "3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Install dependencies
        run: |
          python -m pip install cookiecutter check-manifest build

      - name: Create pure frontend extension
        run: |
          set -eux
          # Trick to use custom parameters
          python -c "from cookiecutter.main import cookiecutter; import json; f=open('cookiecutter.json'); d=json.load(f); f.close(); d['kind']='theme'; cookiecutter('.', extra_context=d, no_input=True)"
          pushd mytheme
          pip install quetz-frontend
          jlpm install
          pip install -e .
          quetz-frontend develop . --overwrite
          quetz-frontend list
          quetz-frontend list 2>&1 | grep -ie "${NAME}"

          quetz-frontend clean
          quetz-frontend clean-frontend
          pip uninstall -y mytheme quetz-frontend

          git init && git add .
          check-manifest -v

          popd
          rm -rf mytheme
